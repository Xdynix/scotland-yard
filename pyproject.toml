[project]
name = "scotland-yard"
version = "0.1.0"
requires-python = ">=3.13"
dependencies = [
    "fastapi[standard]>=0.115.12",
    "pydantic-settings>=2.9.1",
    "pyjwt[crypto]>=2.10.1",
    "tortoise-cli>=0.1.2",
    "tortoise-orm[asyncpg]>=0.25.0",
]

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "poethepoet>=0.34.0",
    "pre-commit>=4.2.0",
]

[tool.poe.tasks.dev-setup]
sequence = [
    "uv sync",
    "pre-commit install",
]
help = "set up development environment"
default_item_type = "cmd"

[tool.poe.tasks.lint]
cmd = "pre-commit run --all-files"
help = "execute linters"

[tool.poe.tasks.dev]
cmd = """
docker compose
    -f docker-compose.yml
    -f docker-compose.dev.yml
    watch
"""
help = "start development server"

[tool.poe.tasks.pyshell]
cmd = "docker compose exec -it app tortoise-cli -c app.settings.TORTOISE_ORM shell"
help = "start interactive Python shell"

[tool.poe.tasks.dbshell]
cmd = "docker compose exec -it postgres bash -c 'psql -U $POSTGRES_USER -h localhost'"
help = "start interactive database shell"

[tool.ruff]
cache-dir = ".cache/ruff"

[tool.ruff.lint]
select = [
    "F", # Pyflakes
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "I", # isort
    "PGH", # pygrep-hooks
    "UP", # pyupgrade
    "S", # flake8-bandit
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
    "FAST", # FastAPI
    "PTH", # flake8-use-pathlib
    "FURB", # refurb
    "RUF", # Ruff-specific rules
]
ignore = [
    # Suppressed by ruff formatter.
    "W191", # tab-indentation
    "E111", # indentation-with-invalid-multiple
    "E114", # indentation-with-invalid-multiple-comment
    "E117", # over-indented
]

[tool.mypy]
strict = true
cache_dir = ".cache/mypy"
